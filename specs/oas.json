{
  "components": {
    "schemas": {
      "AppGroup": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preferredVersion": {
            "$ref": "#/components/schemas/AppGroupVersion"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/AppGroupVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppGroupVersion": {
        "properties": {
          "groupVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "K8SPatchOp": {
        "properties": {
          "from": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "x-permissive": {
            "type": "boolean"
          }
        },
        "required": [
          "op",
          "path"
        ],
        "type": "object"
      },
      "OverlayState": {
        "properties": {
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLink"
            },
            "type": "object"
          },
          "nodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNode"
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Patch": {
        "items": {
          "$ref": "#/components/schemas/K8SPatchOp"
        },
        "type": "array"
      },
      "Resource": {
        "properties": {
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaced": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "singularName": {
            "type": "string"
          },
          "uiCategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceHistory": {
        "items": {
          "$ref": "#/components/schemas/ResourceHistoryEntry"
        },
        "type": "array"
      },
      "ResourceHistoryEntry": {
        "properties": {
          "author": {
            "type": "string"
          },
          "changeType": {
            "type": "string"
          },
          "commitTime": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "groupVersion": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceTopology": {
        "properties": {
          "topology": {
            "$ref": "#/components/schemas/OverlayState"
          },
          "topologyMetadata": {
            "$ref": "#/components/schemas/Topology"
          }
        },
        "type": "object"
      },
      "Status": {
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/StatusDetails"
          },
          "kind": {
            "type": "string"
          },
          "string": {
            "type": "string"
          }
        },
        "title": "Status is a return value for calls that don't return other objects.",
        "type": "object"
      },
      "StatusDetails": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoAttrMetadata": {
        "properties": {
          "type": {
            "type": "string"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoElemMetadata": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoAttrMetadata"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "subtitle": {
            "type": "string"
          },
          "subtitle_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoLinkEndpoint": {
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "node": {
            "type": "string"
          },
          "node_key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoNodeGrouping": {
        "properties": {
          "group": {
            "type": "string"
          },
          "tier": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpoint": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayEndpointState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayEndpointState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayLink": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "cr_name": {
            "type": "string"
          },
          "endpoint_a": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_a_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "endpoint_b": {
            "$ref": "#/components/schemas/TopoLinkEndpoint"
          },
          "endpoint_b_details": {
            "$ref": "#/components/schemas/TopoOverlayEndpoint"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayLinkState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayLinkState": {
        "properties": {
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoOverlayNode": {
        "properties": {
          "attributes": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "cr_name": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoNodeGrouping"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overlays": {
            "additionalProperties": {
              "$ref": "#/components/schemas/TopoOverlayNodeState"
            },
            "type": "object"
          },
          "schema": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          },
          "ui_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopoOverlayNodeState": {
        "properties": {
          "badges": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          "state": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopoSchema": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Topology": {
        "properties": {
          "endpoints": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "group": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/TopoSchema"
          },
          "links": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "name": {
            "type": "string"
          },
          "nodes": {
            "$ref": "#/components/schemas/TopoElemMetadata"
          },
          "ui_description": {
            "type": "string"
          },
          "ui_description_key": {
            "type": "string"
          },
          "ui_name": {
            "type": "string"
          },
          "ui_name_key": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UIResult": {
        "type": "string"
      },
      "com.nokia.eda.filters.v1alpha1.ControlPlaneFilter": {
        "description": "ControlPlaneFilter is the Schema for the controlplanefilters API",
        "properties": {
          "apiVersion": {
            "default": "filters.eda.nokia.com/v1alpha1",
            "pattern": "^filters\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to filters.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "ControlPlaneFilter",
            "pattern": "^ControlPlaneFilter$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to ControlPlaneFilter",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter_metadata"
          },
          "spec": {
            "description": "ControlPlaneFilter allows for specifying a list of Nodes or Node selectors where the filter should be applied and managing filter entries in order.",
            "properties": {
              "entries": {
                "description": "Specifies the list of filter entries, in order.",
                "items": {
                  "properties": {
                    "description": {
                      "description": "Description of the FilterEntry.",
                      "title": "Description",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 4
                      }
                    },
                    "ipEntry": {
                      "properties": {
                        "action": {
                          "description": "An action to take, either 'Accept','Drop', or 'RateLimit'.",
                          "enum": [
                            "Drop",
                            "Accept",
                            "RateLimit"
                          ],
                          "title": "Action",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-single-line-group": "Action"
                          }
                        },
                        "destinationPortName": {
                          "description": "Destination port to match by name.",
                          "enum": [
                            "ACAP",
                            "AFP-TCP",
                            "ARNS",
                            "ASF-RMCP",
                            "ASHARE",
                            "ATALK-RM",
                            "AURP",
                            "AUTH",
                            "BFD",
                            "BFD-ECHO",
                            "BFTP",
                            "BGMP",
                            "BGP",
                            "BOOTPC",
                            "BOOTPS",
                            "CCSO-NS",
                            "CHARGEN",
                            "CISCO-TDP",
                            "CITADEL",
                            "CLEARCASE",
                            "COMMERCE",
                            "COURIER",
                            "DAYTIME",
                            "DHCP-FAILOVER",
                            "DHCPV6-CLIENT",
                            "DHCPV6-SERVER",
                            "DICOM",
                            "DISCARD",
                            "DNSIX",
                            "DOMAIN",
                            "DSP",
                            "ECHO",
                            "EPP",
                            "ESRO",
                            "EXEC",
                            "FINGER",
                            "FTP",
                            "FTP-DATA",
                            "FTPS",
                            "FTPS-DATA",
                            "GODI",
                            "GOPHER",
                            "GTP-C",
                            "GTP-PRIME",
                            "GTP-U",
                            "HA-CLUSTER",
                            "HOSTNAME",
                            "HP-ALARM-MGR",
                            "HTTP",
                            "HTTP-ALT",
                            "HTTP-MGMT",
                            "HTTP-RPC",
                            "HTTPS",
                            "IEEE-MMS-SSL",
                            "IMAP",
                            "IMAP3",
                            "IMAPS",
                            "IPP",
                            "IPSEC",
                            "IPX",
                            "IRC",
                            "IRIS-BEEP",
                            "ISAKMP",
                            "ISAKMP-NAT",
                            "ISCSI",
                            "ISO-TSAP",
                            "KERBEROS",
                            "KERBEROS-ADM",
                            "KLOGIN",
                            "KPASSWD",
                            "KSHELL",
                            "L2TP",
                            "LDAP",
                            "LDAPS",
                            "LDP",
                            "LMP",
                            "LOGIN",
                            "LPD",
                            "LSP-PING",
                            "MAC-SERVER-ADM",
                            "MATIP-A",
                            "MATIP-B",
                            "MICRO-BFD",
                            "MICROSOFT-DS",
                            "MOBILE-IP",
                            "MONITOR",
                            "MPP",
                            "MS-EXCHANGE",
                            "MSDP",
                            "MSP",
                            "MSSQL-M",
                            "MSSQL-S",
                            "MULTIHOP-BFD",
                            "NAS",
                            "NCP",
                            "NETBIOS-DATA",
                            "NETBIOS-NS",
                            "NETBIOS-SS",
                            "NETNEWS",
                            "NETRJS-1",
                            "NETRJS-2",
                            "NETRJS-3",
                            "NETRJS-4",
                            "NETWALL",
                            "NEW-RWHO",
                            "NFS",
                            "NNTP",
                            "NNTPS",
                            "NTP",
                            "ODMR",
                            "OLSR",
                            "OPENVPN",
                            "PIM-AUTO-RP",
                            "PKIX-TIMESTAMP",
                            "POP2",
                            "POP3",
                            "POP3S",
                            "PPTP",
                            "PRINT-SRV",
                            "PTP-EVENT",
                            "PTP-GENERAL",
                            "QMTP",
                            "QOTD",
                            "RADIUS",
                            "RADIUS-ACCT",
                            "REMOTE-MAIL",
                            "REMOTEFS",
                            "REMOTECMD",
                            "RIP",
                            "RJE",
                            "RLP",
                            "RLZDB",
                            "RMC",
                            "RMONITOR",
                            "RPC2PORTMAP",
                            "RSYNC",
                            "RTELNET",
                            "RTSP",
                            "SGMP",
                            "SILC",
                            "SMUX",
                            "SNA-GW",
                            "SNMP",
                            "SNMP-TRAP",
                            "SNPP",
                            "SMTP",
                            "SQL-SVCS",
                            "SQL",
                            "SSH",
                            "SUBMISSION",
                            "SUNRPC",
                            "SVCLOC",
                            "SYSLOG",
                            "SYSTAT",
                            "TACACS",
                            "TALK",
                            "TCPMUX",
                            "TCPNETHASPSRV",
                            "TFTP",
                            "TIME",
                            "TIMED",
                            "UPS",
                            "XDMCP",
                            "XNS-CH",
                            "XNS-MAIL",
                            "XNS-TIME",
                            "Z3950"
                          ],
                          "title": "Destination Port Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 450,
                            "ui-single-line-group": "PortName"
                          }
                        },
                        "destinationPortNumber": {
                          "description": "Destination port to match by numerical value.",
                          "maximum": 65535,
                          "minimum": 0,
                          "title": "Destination Port Number",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 250,
                            "ui-single-line-group": "PortNumbers"
                          }
                        },
                        "destinationPortOperator": {
                          "description": "Operator to use when matching destinationPort, either Equals, GreaterOrEquals, or LessOrEquals.",
                          "enum": [
                            "Equals",
                            "GreaterOrEquals",
                            "LessOrEquals"
                          ],
                          "title": "Destination Port Operator",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "!ipEntry.destinationPortOperator \u0026\u0026 ((ipEntry.destinationPortNumber || ipEntry.destinationPortName !== '') || ipEntry.tcpFlags !== '')",
                                "value": "Equals"
                              },
                              {
                                "condition": "ipEntry.destinationPortOperator !== 'Equals' \u0026\u0026 (!ipEntry.destinationPortNumber \u0026\u0026 !ipEntry.destinationPortName \u0026\u0026 !ipEntry.destinationPortNumber)",
                                "value": ""
                              }
                            ],
                            "ui-order-priority": 550,
                            "ui-single-line-group": "PortOperator"
                          }
                        },
                        "destinationPortRange": {
                          "description": "Range of destination ports to match, in the format n-m, e.g. 100-200,  The start and end of the range must be port numbers.",
                          "title": "Destination Port Range",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 350,
                            "ui-single-line-group": "PortRange"
                          }
                        },
                        "destinationPrefix": {
                          "description": "Destination prefix to match.",
                          "format": "ip",
                          "title": "Destination Prefix",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 150,
                            "ui-single-line-group": "DestinationSourcePrefix"
                          }
                        },
                        "firstFragment": {
                          "description": "Match the first fragment only.",
                          "title": "First Fragment",
                          "type": "boolean",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 1000,
                            "ui-single-line-group": "Fragment"
                          }
                        },
                        "fragment": {
                          "description": "Match any fragment.",
                          "title": "Fragment",
                          "type": "boolean",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "ipEntry.firstFragment",
                                "value": true
                              }
                            ],
                            "ui-order-priority": 1050,
                            "ui-single-line-group": "Fragment"
                          }
                        },
                        "icmpCode": {
                          "description": "Match a specific ICMP code, as a number between 0-255, e.g. 0.",
                          "items": {
                            "type": "integer"
                          },
                          "maxItems": 255,
                          "title": "ICMP Code",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 800,
                            "ui-visible-if": "ipEntry.protocolName === \"ICMP\" || ipEntry.protocolName === \"ICMP6\" || ipEntry.protocolNumber === 1 || ipEntry.protocolNumber === 58"
                          }
                        },
                        "icmpTypeName": {
                          "description": "Match a specific ICMP type by name, e.g. dest-unreachable.",
                          "enum": [
                            "DestUnreachable",
                            "Echo",
                            "EchoReply",
                            "EchoRequest",
                            "McastRtrAdv",
                            "McastRtrSolicit",
                            "McastRtrTerm",
                            "MldDone",
                            "MldQuery",
                            "MldReport",
                            "MldV2",
                            "NeighborAdvertise",
                            "NeighborSolicit",
                            "NodeInfoQuery",
                            "NodeInfoResponse",
                            "PacketTooBig",
                            "ParamProblem",
                            "Redirect",
                            "RouterAdvertise",
                            "RouterRenumber",
                            "RouterSolicit",
                            "SourceQuench",
                            "TimeExceeded",
                            "Timestamp",
                            "TimestampReply"
                          ],
                          "title": "ICMP Type Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 700,
                            "ui-single-line-group": "ICMPType",
                            "ui-visible-if": "ipEntry.protocolName === \"ICMP\" || ipEntry.protocolName === \"ICMP6\" || ipEntry.protocolNumber === 1 || ipEntry.protocolNumber === 58"
                          }
                        },
                        "icmpTypeNumber": {
                          "description": "Match a specific ICMP type by number.",
                          "maximum": 255,
                          "minimum": 0,
                          "title": "ICMP Type Number",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 750,
                            "ui-single-line-group": "ICMPType",
                            "ui-visible-if": "ipEntry.protocolName === \"ICMP\" || ipEntry.protocolName === \"ICMP6\" || ipEntry.protocolNumber === 1 || ipEntry.protocolNumber === 58"
                          }
                        },
                        "log": {
                          "description": "Log the matches for this entry.",
                          "title": "Log",
                          "type": "boolean",
                          "x-eda-nokia-com": {
                            "ui-column-span": 1,
                            "ui-single-line-group": "Action"
                          }
                        },
                        "protocolName": {
                          "description": "Match a specific IP protocol name (specified in the type field of the IP header).",
                          "enum": [
                            "AH",
                            "EGP",
                            "EIGRP",
                            "ESP",
                            "GGP",
                            "GRE",
                            "ICMP",
                            "ICMP6",
                            "IDRP",
                            "IGMP",
                            "IGP",
                            "IPV4",
                            "IPV6",
                            "IPV6-DEST-OPTS",
                            "IPV6-HOP",
                            "L2TP",
                            "MPLS-IN-IP",
                            "NO-NEXT-HDR",
                            "OSPF",
                            "PIM",
                            "ROHC",
                            "RSVP",
                            "SCTP",
                            "ST",
                            "TCP",
                            "UDP",
                            "VRRP"
                          ],
                          "title": "Protocol Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "!ipEntry.protocolName \u0026\u0026 ((ipEntry.sourcePortNumber || ipEntry.sourcePortRange !== '' || ipEntry.sourcePortName !== '' || ipEntry.destinationPortNumber || ipEntry.destinationPortRange !== '' || ipEntry.destinationPortName !== '') || ipEntry.tcpFlags !== '')",
                                "value": "TCP"
                              },
                              {
                                "condition": "ipEntry.protocolName === 'TCP' \u0026\u0026 (!ipEntry.sourcePortNumber \u0026\u0026 !ipEntry.sourcePortRange \u0026\u0026 !ipEntry.sourcePortName \u0026\u0026 !ipEntry.destinationPortNumber \u0026\u0026 !ipEntry.destinationPortRange \u0026\u0026 !ipEntry.destinationPortName \u0026\u0026 ipEntry.tcpFlags === '')",
                                "value": ""
                              }
                            ],
                            "ui-order-priority": 650,
                            "ui-single-line-group": "ProtocolNumberName"
                          }
                        },
                        "protocolNumber": {
                          "description": "Match a specific IP protocol number (specified in the type field of the IP header).",
                          "maximum": 255,
                          "minimum": 0,
                          "title": "Protocol Number",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 600,
                            "ui-single-line-group": "ProtocolNumberName"
                          }
                        },
                        "rateLimit": {
                          "description": "Rate limit to apply when the action is 'RateLimit'.",
                          "properties": {
                            "burstSize": {
                              "description": "The maximum burst size in bytes.",
                              "format": "int32",
                              "title": "Burst Size",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 200
                              }
                            },
                            "entrySpecificPolicer": {
                              "default": false,
                              "description": "Controls policer instantiation: false for shared instance, true for per-entry instances",
                              "title": "Entry Specific Policer",
                              "type": "boolean",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 300
                              }
                            },
                            "peakRate": {
                              "description": "The peak rate in kilobytes per second.",
                              "format": "int32",
                              "title": "Peak Rate",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 100
                              }
                            },
                            "scope": {
                              "default": "Global",
                              "description": "Determines how the policer is applied across subinterfaces. Global applies the policer across all subinterfaces, while Subinterface applies it individually to each subinterface.",
                              "enum": [
                                "Global",
                                "Subinterface"
                              ],
                              "title": "Scope",
                              "type": "string",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 400
                              }
                            }
                          },
                          "title": "Rate Limit",
                          "type": "object"
                        },
                        "sourcePortName": {
                          "description": "Source port to match by name.",
                          "enum": [
                            "ACAP",
                            "AFP-TCP",
                            "ARNS",
                            "ASF-RMCP",
                            "ASHARE",
                            "ATALK-RM",
                            "AURP",
                            "AUTH",
                            "BFD",
                            "BFD-ECHO",
                            "BFTP",
                            "BGMP",
                            "BGP",
                            "BOOTPC",
                            "BOOTPS",
                            "CCSO-NS",
                            "CHARGEN",
                            "CISCO-TDP",
                            "CITADEL",
                            "CLEARCASE",
                            "COMMERCE",
                            "COURIER",
                            "DAYTIME",
                            "DHCP-FAILOVER",
                            "DHCPV6-CLIENT",
                            "DHCPV6-SERVER",
                            "DICOM",
                            "DISCARD",
                            "DNSIX",
                            "DOMAIN",
                            "DSP",
                            "ECHO",
                            "EPP",
                            "ESRO",
                            "EXEC",
                            "FINGER",
                            "FTP",
                            "FTP-DATA",
                            "FTPS",
                            "FTPS-DATA",
                            "GODI",
                            "GOPHER",
                            "GTP-C",
                            "GTP-PRIME",
                            "GTP-U",
                            "HA-CLUSTER",
                            "HOSTNAME",
                            "HP-ALARM-MGR",
                            "HTTP",
                            "HTTP-ALT",
                            "HTTP-MGMT",
                            "HTTP-RPC",
                            "HTTPS",
                            "IEEE-MMS-SSL",
                            "IMAP",
                            "IMAP3",
                            "IMAPS",
                            "IPP",
                            "IPSEC",
                            "IPX",
                            "IRC",
                            "IRIS-BEEP",
                            "ISAKMP",
                            "ISAKMP-NAT",
                            "ISCSI",
                            "ISO-TSAP",
                            "KERBEROS",
                            "KERBEROS-ADM",
                            "KLOGIN",
                            "KPASSWD",
                            "KSHELL",
                            "L2TP",
                            "LDAP",
                            "LDAPS",
                            "LDP",
                            "LMP",
                            "LOGIN",
                            "LPD",
                            "LSP-PING",
                            "MAC-SERVER-ADM",
                            "MATIP-A",
                            "MATIP-B",
                            "MICRO-BFD",
                            "MICROSOFT-DS",
                            "MOBILE-IP",
                            "MONITOR",
                            "MPP",
                            "MS-EXCHANGE",
                            "MSDP",
                            "MSP",
                            "MSSQL-M",
                            "MSSQL-S",
                            "MULTIHOP-BFD",
                            "NAS",
                            "NCP",
                            "NETBIOS-DATA",
                            "NETBIOS-NS",
                            "NETBIOS-SS",
                            "NETNEWS",
                            "NETRJS-1",
                            "NETRJS-2",
                            "NETRJS-3",
                            "NETRJS-4",
                            "NETWALL",
                            "NEW-RWHO",
                            "NFS",
                            "NNTP",
                            "NNTPS",
                            "NTP",
                            "ODMR",
                            "OLSR",
                            "OPENVPN",
                            "PIM-AUTO-RP",
                            "PKIX-TIMESTAMP",
                            "POP2",
                            "POP3",
                            "POP3S",
                            "PPTP",
                            "PRINT-SRV",
                            "PTP-EVENT",
                            "PTP-GENERAL",
                            "QMTP",
                            "QOTD",
                            "RADIUS",
                            "RADIUS-ACCT",
                            "REMOTE-MAIL",
                            "REMOTEFS",
                            "REMOTECMD",
                            "RIP",
                            "RJE",
                            "RLP",
                            "RLZDB",
                            "RMC",
                            "RMONITOR",
                            "RPC2PORTMAP",
                            "RSYNC",
                            "RTELNET",
                            "RTSP",
                            "SGMP",
                            "SILC",
                            "SMUX",
                            "SNA-GW",
                            "SNMP",
                            "SNMP-TRAP",
                            "SNPP",
                            "SMTP",
                            "SQL-SVCS",
                            "SQL",
                            "SSH",
                            "SUBMISSION",
                            "SUNRPC",
                            "SVCLOC",
                            "SYSLOG",
                            "SYSTAT",
                            "TACACS",
                            "TALK",
                            "TCPMUX",
                            "TCPNETHASPSRV",
                            "TFTP",
                            "TIME",
                            "TIMED",
                            "UPS",
                            "XDMCP",
                            "XNS-CH",
                            "XNS-MAIL",
                            "XNS-TIME",
                            "Z3950"
                          ],
                          "title": "Source Port Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 400,
                            "ui-single-line-group": "PortName"
                          }
                        },
                        "sourcePortNumber": {
                          "description": "Source port to match by numerical value.",
                          "maximum": 65535,
                          "minimum": 0,
                          "title": "Source Port Number",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 200,
                            "ui-single-line-group": "PortNumbers"
                          }
                        },
                        "sourcePortOperator": {
                          "description": "Operator to use when matching sourcePort, either Equals, GreaterOrEquals, or LessOrEquals.",
                          "enum": [
                            "Equals",
                            "GreaterOrEquals",
                            "LessOrEquals"
                          ],
                          "title": "Source Port Operator",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "!ipEntry.sourcePortOperator \u0026\u0026 ((ipEntry.sourcePortNumber || ipEntry.sourcePortName !== '') || ipEntry.tcpFlags !== '')",
                                "value": "Equals"
                              },
                              {
                                "condition": "ipEntry.sourcePortOperator === 'Equals' \u0026\u0026 (!ipEntry.sourcePortNumber \u0026\u0026 !ipEntry.sourcePortName \u0026\u0026 !ipEntry.destinationPortNumber)",
                                "value": ""
                              }
                            ],
                            "ui-order-priority": 500,
                            "ui-single-line-group": "PortOperator"
                          }
                        },
                        "sourcePortRange": {
                          "description": "Range of source ports to match, in the format n-m, e.g. 100-200.  The start and end of the range must be port numbers.",
                          "title": "Source Port Range",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300,
                            "ui-single-line-group": "PortRange"
                          }
                        },
                        "sourcePrefix": {
                          "description": "Source prefix to match.",
                          "format": "ip",
                          "title": "Source Prefix",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 100,
                            "ui-single-line-group": "DestinationSourcePrefix"
                          }
                        },
                        "tcpFlags": {
                          "description": "Match TCP flags, usable with !, \u0026, | and the flags RST, SYN, and ACK.",
                          "title": "TCP Flags",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 900,
                            "ui-visible-if": "ipEntry.protocolName === \"TCP\" || ipEntry.protocolNumber === 6"
                          }
                        }
                      },
                      "title": "IP Entry",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-conditions": [
                          {
                            "condition": "!((ipEntry.action === undefined) \u0026\u0026 (ipEntry.sourcePortNumber !== null || ipEntry.destinationPortNumber !== null || ipEntry.sourcePrefix !== undefined || ipEntry.destinationPrefix !== undefined || ipEntry.soucePortRange !== undefined || ipEntry.destinationPortRange !== undefined || ipEntry.sourcePortName !== undefined || ipEntry.destinationPortName !== undefined || ipEntry.sourcePortOperator !== undefined || ipEntry.destinationPortOperator !== undefined || ipEntry.protocolNumber !== null || ipEntry.protocolName !== undefined || ipEntry.icmpTypeName !== undefined || ipEntry.icmpTypeNumber !== null || ipEntry.tcpFlags !== undefined || ipEntry.firstFragment !== false || ipEntry.fragment !== false))",
                            "errorMsg": "An IP action must be set if any of the IP fields are set."
                          },
                          {
                            "condition": "!(ipEntry.firstFragment === true \u0026\u0026 ipEntry.fragment === false)",
                            "errorMsg": "Fragment match must be enabled when First Fragment match is enabled."
                          },
                          {
                            "condition": "!((ipEntry.sourcePortNumber ? 1 : 0) + (ipEntry.sourcePortRange ? 1 : 0) + (ipEntry.sourcePortName ? 1 : 0) \u003e 1)",
                            "errorMsg": "Only one of Source Port Number, Source Port Range or Source Port Name can be set at a time."
                          },
                          {
                            "condition": "!((ipEntry.destinationPortNumber ? 1 : 0) + (ipEntry.destinationPortRange ? 1 : 0) + (ipEntry.destinationPortName ? 1 : 0) \u003e 1)",
                            "errorMsg": "Only one of Destination Port Number, Destination Port Range or Destination Port Name can be set at a time."
                          },
                          {
                            "condition": "!(ipEntry.protocolNumber !== null \u0026\u0026 ipEntry.protocolName !== undefined)",
                            "errorMsg": "Only one of the Protocol Number or Protocol Name can be set at a time."
                          },
                          {
                            "condition": "!((ipEntry.sourcePortNumber !== null || ipEntry.destinationPortNumber !== null || ipEntry.sourcePortRange !== undefined || ipEntry.destinationPortRange !== undefined || ipEntry.sourcePortName !== undefined || ipEntry.destinationPortName !== undefined) \u0026\u0026 (ipEntry.protocolNumber === null \u0026\u0026 ipEntry.protocolName === undefined))",
                            "errorMsg": "Protocol Name or Protocol Number must be set if any of the Source/Destination Port or Port Range fields are set."
                          },
                          {
                            "condition": "!((ipEntry.sourcePortNumber !== null || ipEntry.destinationPortNumber !== null || ipEntry.sourcePortRange !== undefined || ipEntry.destinationPortRange !== undefined || ipEntry.sourcePortName !== undefined || ipEntry.destinationPortName !== undefined) \u0026\u0026 !((ipEntry.protocolNumber === 6 || ipEntry.protocolNumber === 17) || (ipEntry.protocolName === 'TCP' || ipEntry.protocolName === 'UDP')))",
                            "errorMsg": "Protocol must be TCP or UDP if any of the Source/Destination Port or Port Range fields are set."
                          },
                          {
                            "condition": "(ipEntry.icmpTypeName === undefined \u0026\u0026 ipEntry.icmpTypeNumber === null) || (ipEntry.icmpTypeName !== undefined \u0026\u0026 ipEntry.icmpTypeNumber === null) || (ipEntry.icmpTypeName === undefined \u0026\u0026 ipEntry.icmpTypeNumber !== null)",
                            "errorMsg": "Either ICMP Type Name or ICMP Type Number must be set, but not both."
                          },
                          {
                            "condition": "!((ipEntry.protocolName === 'ICMP' || ipEntry.protocolNumber === 1) \u0026\u0026 ipEntry.icmpTypeName !== undefined \u0026\u0026 ['McastRtrAdv', 'McastRtrSolicit', 'McastRtrTerm', 'MldDone', 'MldQuery', 'MldReport', 'MldV2', 'NeighborAdvertise', 'NeighborSolicit', 'NodeInfoQuery', 'NodeInfoResponse', 'PacketTooBig', 'ParamProblem', 'RouterAdvertise', 'RouterRenumber', 'RouterSolicit'].includes(ipEntry.icmpTypeName))",
                            "errorMsg": "IPv6 ICMP types cannot be used with IPv4 ICMP protocol"
                          },
                          {
                            "condition": "!((ipEntry.protocolName === 'ICMP6' || ipEntry.protocolNumber === 58) \u0026\u0026 ipEntry.icmpTypeName !== undefined \u0026\u0026 !['DestUnreachable', 'EchoReply', 'EchoRequest', 'McastRtrAdv', 'McastRtrSolicit', 'McastRtrTerm', 'MldDone', 'MldQuery', 'MldReport', 'MldV2', 'NeighborAdvertise', 'NeighborSolicit', 'NodeInfoQuery', 'NodeInfoResponse', 'PacketTooBig', 'ParamProblem', 'Redirect', 'RouterAdvertise', 'RouterRenumber', 'RouterSolicit', 'TimeExceeded'].includes(ipEntry.icmpTypeName))",
                            "errorMsg": "Invalid ICMPv6 type name provided."
                          },
                          {
                            "condition": "!((ipEntry.protocolName === 'ICMP' || ipEntry.protocolNumber === 1) \u0026\u0026 ipEntry.icmpTypeName !== undefined \u0026\u0026 !['DestUnreachable', 'Echo', 'EchoReply', 'ParamProblem', 'Redirect', 'RouterAdvertise', 'RouterSolicit', 'SourceQuench', 'TimeExceeded', 'Timestamp', 'TimestampReply'].includes(ipEntry.icmpTypeName))",
                            "errorMsg": "Invalid ICMPv4 type name provided."
                          }
                        ],
                        "ui-visible-if": "type != \"MAC\" || type == \"Auto\""
                      }
                    },
                    "macEntry": {
                      "properties": {
                        "action": {
                          "description": "An action to take, either 'Accept','Drop', or 'RateLimit'.",
                          "enum": [
                            "Drop",
                            "Accept",
                            "RateLimit"
                          ],
                          "title": "Action",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-single-line-group": "Action"
                          }
                        },
                        "destinationMAC": {
                          "description": "Match an Ethernet frame if its destination MAC address logically anded with the mask equals this MAC address.",
                          "format": "macAddr",
                          "title": "Destination MAC",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 150,
                            "ui-single-line-group": "DestinationSourceMAC"
                          }
                        },
                        "destinationMACMask": {
                          "description": "Match an Ethernet frame if its destination MAC address logically anded with the mask equals the configured MAC address.",
                          "title": "Destination MAC Mask",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 250,
                            "ui-single-line-group": "DestinationSourceMACMask"
                          }
                        },
                        "ethertype": {
                          "description": "An Ethernet frame matches this condition if its ethertype value (after 802.1Q VLAN tags) matches the specified value.",
                          "enum": [
                            "ARP",
                            "AUTHENTICATION8021X",
                            "ETHOAM",
                            "FCOE",
                            "FCOEINITIALIZATION",
                            "FLOWCONTROL",
                            "IPV4",
                            "IPV6",
                            "LACP",
                            "LLDP",
                            "MACSEC",
                            "MPLSMULTICAST",
                            "MPLSUNICAST",
                            "PBB",
                            "PPPOEDISCOVERY",
                            "PPPOESESSION",
                            "PTP",
                            "ROCE"
                          ],
                          "title": "Ethertype",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 500
                          }
                        },
                        "log": {
                          "description": "Log the matches for this entry.",
                          "title": "Log",
                          "type": "boolean",
                          "x-eda-nokia-com": {
                            "ui-column-span": 1,
                            "ui-single-line-group": "Action"
                          }
                        },
                        "outerVLANIDOperator": {
                          "description": "Operator to use when matching OuterVlanIdValue, either Equals, GreaterOrEquals, or LessOrEquals.",
                          "enum": [
                            "Equals",
                            "GreaterOrEquals",
                            "LessOrEquals"
                          ],
                          "title": "Outer VLAN ID Operator",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "!macEntry.outerVLANIDOperator \u0026\u0026 ((macEntry.outerVLANIDValue !== '' || macEntry.outerVLANIDRange !== ''))",
                                "value": "Equals"
                              },
                              {
                                "condition": "macEntry.outerVLANIDOperator === 'Equals' \u0026\u0026 (!macEntry.outerVLANIDValue \u0026\u0026 !macEntry.outerVLANIDRange)",
                                "value": ""
                              }
                            ],
                            "ui-order-priority": 400
                          }
                        },
                        "outerVLANIDRange": {
                          "description": "Range of Outer vlan IDs to match, in the format n-m, e.g. 100-200",
                          "title": "Outer VLAN ID Range",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 350,
                            "ui-single-line-group": "OuterVLANID"
                          }
                        },
                        "outerVLANIDValue": {
                          "description": "Ethernet frame matching criteria based on the outermost VLAN ID found before the subinterface-defining VLAN tag (if any) is removed. A value of 'none' will match only untagged frames.",
                          "title": "Outer VLAN ID Value",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300,
                            "ui-single-line-group": "OuterVLANID"
                          }
                        },
                        "rateLimit": {
                          "description": "Rate limit to apply when the action is 'RateLimit'.",
                          "properties": {
                            "burstSize": {
                              "description": "The maximum burst size in bytes.",
                              "format": "int32",
                              "title": "Burst Size",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 200
                              }
                            },
                            "entrySpecificPolicer": {
                              "default": false,
                              "description": "Controls policer instantiation: false for shared instance, true for per-entry instances",
                              "title": "Entry Specific Policer",
                              "type": "boolean",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 300
                              }
                            },
                            "peakRate": {
                              "description": "The peak rate in kilobytes per second.",
                              "format": "int32",
                              "title": "Peak Rate",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 100
                              }
                            },
                            "scope": {
                              "default": "Global",
                              "description": "Determines how the policer is applied across subinterfaces. Global applies the policer across all subinterfaces, while Subinterface applies it individually to each subinterface.",
                              "enum": [
                                "Global",
                                "Subinterface"
                              ],
                              "title": "Scope",
                              "type": "string",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 400
                              }
                            }
                          },
                          "title": "Rate Limit",
                          "type": "object"
                        },
                        "sourceMAC": {
                          "description": "Match an Ethernet frame if its source MAC address logically anded with the mask equals this MAC address.",
                          "format": "macAddr",
                          "title": "Source MAC",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 100,
                            "ui-single-line-group": "DestinationSourceMAC"
                          }
                        },
                        "sourceMACMask": {
                          "description": "Match an Ethernet frame if its source MAC address logically anded with the mask equals the configured MAC address.",
                          "title": "Source MAC Mask",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 200,
                            "ui-single-line-group": "DestinationSourceMACMask"
                          }
                        }
                      },
                      "title": "MAC Entry",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-conditions": [
                          {
                            "condition": "!((macEntry.action === undefined) \u0026\u0026 (macEntry.sourceMAC !== undefined || macEntry.destinationMAC !== undefined || macEntry.sourceMACMask !== undefined || macEntry.destinationMACMask !== undefined || macEntry.outerVLANIDValue !== undefined || macEntry.outerVLANIDRange !== undefined || macEntry.outerVLANIDOperator !== undefined || macEntry.ethertype !== undefined))",
                            "errorMsg": "A MAC action must be set if any of the MAC fields are set."
                          },
                          {
                            "condition": "!(macEntry.sourceMAC !== undefined \u0026\u0026 macEntry.sourceMACMask === undefined)",
                            "errorMsg": "A mask must be set when a Source MAC is configured"
                          },
                          {
                            "condition": "!(macEntry.destinationMAC !== undefined \u0026\u0026 macEntry.destinationMACMask === undefined)",
                            "errorMsg": "A mask must be set when a Destination MAC is configured"
                          },
                          {
                            "condition": "!(macEntry.outerVLANIDValue !== undefined \u0026\u0026 macEntry.outerVLANIDRange !== undefined)",
                            "errorMsg": "Outer VLAN ID Value and Outer VLAN ID Range cannot be set at the same time"
                          }
                        ],
                        "ui-visible-if": "type == \"MAC\" || type == \"Auto\""
                      }
                    },
                    "type": {
                      "default": "Auto",
                      "description": "Type of the entry which can be IPV4, IPV6, MAC or Auto.",
                      "enum": [
                        "IPV4",
                        "IPV6",
                        "MAC",
                        "Auto"
                      ],
                      "title": "Type",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2
                      }
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "title": "Entries",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-may-reorder": true,
                  "ui-order-priority": 900
                }
              },
              "nodeSelector": {
                "description": "Label selector used to select Toponodes on which to deploy the CPM filter.",
                "format": "labelselector",
                "items": {
                  "type": "string"
                },
                "title": "Node Selector",
                "type": "array"
              },
              "nodes": {
                "description": "Reference to a list of TopoNodes on which to deploy the CPM filter.",
                "items": {
                  "type": "string"
                },
                "title": "Nodes",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "type": "gvr",
                      "version": "v1"
                    }
                  ]
                }
              },
              "statisticsPerEntry": {
                "description": "Enable or disable per-entry counters.",
                "title": "Per-entry counters",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 1050
                }
              }
            },
            "required": [
              "entries"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "ControlPlaneFilterStatus defines the observed state of ControlPlaneFilter",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.filters.v1alpha1.ControlPlaneFilterList": {
        "description": "ControlPlaneFilterList is a list of controlplanefilters",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.filters.v1alpha1.ControlPlaneFilter_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.filters.v1alpha1.ControlPlaneFilter_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.filters.v1alpha1.ControlPlaneFilter_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "filters.eda.nokia.com",
                  "kind": "ControlPlaneFilter",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      },
      "com.nokia.eda.filters.v1alpha1.Filter": {
        "description": "Filter is the Schema for the filters API",
        "properties": {
          "apiVersion": {
            "default": "filters.eda.nokia.com/v1alpha1",
            "pattern": "^filters\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to filters.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "Filter",
            "pattern": "^Filter$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to Filter",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter_metadata"
          },
          "spec": {
            "description": "Filter allows for the creation and management of ordered filtering rules based on IP or MAC criteria. The resource supports various conditions and actions, enabling fine-grained control over network traffic by specifying rules for source and destination addresses, ports, and protocols.",
            "properties": {
              "entries": {
                "description": "Specifies the list of filter entries, in order.",
                "items": {
                  "properties": {
                    "description": {
                      "description": "Description of the FilterEntry.",
                      "title": "Description",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 4
                      }
                    },
                    "ipEntry": {
                      "properties": {
                        "action": {
                          "description": "An action to take, either 'Accept','Drop', or 'RateLimit'.",
                          "enum": [
                            "Drop",
                            "Accept",
                            "RateLimit"
                          ],
                          "title": "Action",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-single-line-group": "Action"
                          }
                        },
                        "destinationPortName": {
                          "description": "Destination port to match by name.",
                          "enum": [
                            "ACAP",
                            "AFP-TCP",
                            "ARNS",
                            "ASF-RMCP",
                            "ASHARE",
                            "ATALK-RM",
                            "AURP",
                            "AUTH",
                            "BFD",
                            "BFD-ECHO",
                            "BFTP",
                            "BGMP",
                            "BGP",
                            "BOOTPC",
                            "BOOTPS",
                            "CCSO-NS",
                            "CHARGEN",
                            "CISCO-TDP",
                            "CITADEL",
                            "CLEARCASE",
                            "COMMERCE",
                            "COURIER",
                            "DAYTIME",
                            "DHCP-FAILOVER",
                            "DHCPV6-CLIENT",
                            "DHCPV6-SERVER",
                            "DICOM",
                            "DISCARD",
                            "DNSIX",
                            "DOMAIN",
                            "DSP",
                            "ECHO",
                            "EPP",
                            "ESRO",
                            "EXEC",
                            "FINGER",
                            "FTP",
                            "FTP-DATA",
                            "FTPS",
                            "FTPS-DATA",
                            "GODI",
                            "GOPHER",
                            "GTP-C",
                            "GTP-PRIME",
                            "GTP-U",
                            "HA-CLUSTER",
                            "HOSTNAME",
                            "HP-ALARM-MGR",
                            "HTTP",
                            "HTTP-ALT",
                            "HTTP-MGMT",
                            "HTTP-RPC",
                            "HTTPS",
                            "IEEE-MMS-SSL",
                            "IMAP",
                            "IMAP3",
                            "IMAPS",
                            "IPP",
                            "IPSEC",
                            "IPX",
                            "IRC",
                            "IRIS-BEEP",
                            "ISAKMP",
                            "ISAKMP-NAT",
                            "ISCSI",
                            "ISO-TSAP",
                            "KERBEROS",
                            "KERBEROS-ADM",
                            "KLOGIN",
                            "KPASSWD",
                            "KSHELL",
                            "L2TP",
                            "LDAP",
                            "LDAPS",
                            "LDP",
                            "LMP",
                            "LOGIN",
                            "LPD",
                            "LSP-PING",
                            "MAC-SERVER-ADM",
                            "MATIP-A",
                            "MATIP-B",
                            "MICRO-BFD",
                            "MICROSOFT-DS",
                            "MOBILE-IP",
                            "MONITOR",
                            "MPP",
                            "MS-EXCHANGE",
                            "MSDP",
                            "MSP",
                            "MSSQL-M",
                            "MSSQL-S",
                            "MULTIHOP-BFD",
                            "NAS",
                            "NCP",
                            "NETBIOS-DATA",
                            "NETBIOS-NS",
                            "NETBIOS-SS",
                            "NETNEWS",
                            "NETRJS-1",
                            "NETRJS-2",
                            "NETRJS-3",
                            "NETRJS-4",
                            "NETWALL",
                            "NEW-RWHO",
                            "NFS",
                            "NNTP",
                            "NNTPS",
                            "NTP",
                            "ODMR",
                            "OLSR",
                            "OPENVPN",
                            "PIM-AUTO-RP",
                            "PKIX-TIMESTAMP",
                            "POP2",
                            "POP3",
                            "POP3S",
                            "PPTP",
                            "PRINT-SRV",
                            "PTP-EVENT",
                            "PTP-GENERAL",
                            "QMTP",
                            "QOTD",
                            "RADIUS",
                            "RADIUS-ACCT",
                            "REMOTE-MAIL",
                            "REMOTEFS",
                            "REMOTECMD",
                            "RIP",
                            "RJE",
                            "RLP",
                            "RLZDB",
                            "RMC",
                            "RMONITOR",
                            "RPC2PORTMAP",
                            "RSYNC",
                            "RTELNET",
                            "RTSP",
                            "SGMP",
                            "SILC",
                            "SMUX",
                            "SNA-GW",
                            "SNMP",
                            "SNMP-TRAP",
                            "SNPP",
                            "SMTP",
                            "SQL-SVCS",
                            "SQL",
                            "SSH",
                            "SUBMISSION",
                            "SUNRPC",
                            "SVCLOC",
                            "SYSLOG",
                            "SYSTAT",
                            "TACACS",
                            "TALK",
                            "TCPMUX",
                            "TCPNETHASPSRV",
                            "TFTP",
                            "TIME",
                            "TIMED",
                            "UPS",
                            "XDMCP",
                            "XNS-CH",
                            "XNS-MAIL",
                            "XNS-TIME",
                            "Z3950"
                          ],
                          "title": "Destination Port Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 450,
                            "ui-single-line-group": "PortName"
                          }
                        },
                        "destinationPortNumber": {
                          "description": "Destination port to match by numerical value.",
                          "maximum": 65535,
                          "minimum": 0,
                          "title": "Destination Port Number",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 250,
                            "ui-single-line-group": "PortNumbers"
                          }
                        },
                        "destinationPortOperator": {
                          "description": "Operator to use when matching destinationPort, either Equals, GreaterOrEquals, or LessOrEquals.",
                          "enum": [
                            "Equals",
                            "GreaterOrEquals",
                            "LessOrEquals"
                          ],
                          "title": "Destination Port Operator",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "!ipEntry.destinationPortOperator \u0026\u0026 ((ipEntry.destinationPortNumber || ipEntry.destinationPortName !== '') || ipEntry.tcpFlags !== '')",
                                "value": "Equals"
                              },
                              {
                                "condition": "ipEntry.destinationPortOperator !== 'Equals' \u0026\u0026 (!ipEntry.destinationPortNumber \u0026\u0026 !ipEntry.destinationPortName \u0026\u0026 !ipEntry.destinationPortNumber)",
                                "value": ""
                              }
                            ],
                            "ui-order-priority": 550,
                            "ui-single-line-group": "PortOperator"
                          }
                        },
                        "destinationPortRange": {
                          "description": "Range of destination ports to match, in the format n-m, e.g. 100-200,  The start and end of the range must be port numbers.",
                          "title": "Destination Port Range",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 350,
                            "ui-single-line-group": "PortRange"
                          }
                        },
                        "destinationPrefix": {
                          "description": "Destination prefix to match.",
                          "format": "ip",
                          "title": "Destination Prefix",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 150,
                            "ui-single-line-group": "DestinationSourcePrefix"
                          }
                        },
                        "firstFragment": {
                          "description": "Match the first fragment only.",
                          "title": "First Fragment",
                          "type": "boolean",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 1000,
                            "ui-single-line-group": "Fragment"
                          }
                        },
                        "fragment": {
                          "description": "Match any fragment.",
                          "title": "Fragment",
                          "type": "boolean",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "ipEntry.firstFragment",
                                "value": true
                              }
                            ],
                            "ui-order-priority": 1050,
                            "ui-single-line-group": "Fragment"
                          }
                        },
                        "icmpCode": {
                          "description": "Match a specific ICMP code, as a number between 0-255, e.g. 0.",
                          "items": {
                            "type": "integer"
                          },
                          "maxItems": 255,
                          "title": "ICMP Code",
                          "type": "array",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 800,
                            "ui-visible-if": "ipEntry.protocolName === \"ICMP\" || ipEntry.protocolName === \"ICMP6\" || ipEntry.protocolNumber === 1 || ipEntry.protocolNumber === 58"
                          }
                        },
                        "icmpTypeName": {
                          "description": "Match a specific ICMP type by name, e.g. dest-unreachable.",
                          "enum": [
                            "DestUnreachable",
                            "Echo",
                            "EchoReply",
                            "EchoRequest",
                            "McastRtrAdv",
                            "McastRtrSolicit",
                            "McastRtrTerm",
                            "MldDone",
                            "MldQuery",
                            "MldReport",
                            "MldV2",
                            "NeighborAdvertise",
                            "NeighborSolicit",
                            "NodeInfoQuery",
                            "NodeInfoResponse",
                            "PacketTooBig",
                            "ParamProblem",
                            "Redirect",
                            "RouterAdvertise",
                            "RouterRenumber",
                            "RouterSolicit",
                            "SourceQuench",
                            "TimeExceeded",
                            "Timestamp",
                            "TimestampReply"
                          ],
                          "title": "ICMP Type Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 700,
                            "ui-single-line-group": "ICMPType",
                            "ui-visible-if": "ipEntry.protocolName === \"ICMP\" || ipEntry.protocolName === \"ICMP6\" || ipEntry.protocolNumber === 1 || ipEntry.protocolNumber === 58"
                          }
                        },
                        "icmpTypeNumber": {
                          "description": "Match a specific ICMP type by number.",
                          "maximum": 255,
                          "minimum": 0,
                          "title": "ICMP Type Number",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 750,
                            "ui-single-line-group": "ICMPType",
                            "ui-visible-if": "ipEntry.protocolName === \"ICMP\" || ipEntry.protocolName === \"ICMP6\" || ipEntry.protocolNumber === 1 || ipEntry.protocolNumber === 58"
                          }
                        },
                        "log": {
                          "description": "Log the matches for this entry.",
                          "title": "Log",
                          "type": "boolean",
                          "x-eda-nokia-com": {
                            "ui-column-span": 1,
                            "ui-single-line-group": "Action"
                          }
                        },
                        "protocolName": {
                          "description": "Match a specific IP protocol name (specified in the type field of the IP header).",
                          "enum": [
                            "AH",
                            "EGP",
                            "EIGRP",
                            "ESP",
                            "GGP",
                            "GRE",
                            "ICMP",
                            "ICMP6",
                            "IDRP",
                            "IGMP",
                            "IGP",
                            "IPV4",
                            "IPV6",
                            "IPV6-DEST-OPTS",
                            "IPV6-HOP",
                            "L2TP",
                            "MPLS-IN-IP",
                            "NO-NEXT-HDR",
                            "OSPF",
                            "PIM",
                            "ROHC",
                            "RSVP",
                            "SCTP",
                            "ST",
                            "TCP",
                            "UDP",
                            "VRRP"
                          ],
                          "title": "Protocol Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "!ipEntry.protocolName \u0026\u0026 ((ipEntry.sourcePortNumber || ipEntry.sourcePortRange !== '' || ipEntry.sourcePortName !== '' || ipEntry.destinationPortNumber || ipEntry.destinationPortRange !== '' || ipEntry.destinationPortName !== '') || ipEntry.tcpFlags !== '')",
                                "value": "TCP"
                              },
                              {
                                "condition": "ipEntry.protocolName === 'TCP' \u0026\u0026 (!ipEntry.sourcePortNumber \u0026\u0026 !ipEntry.sourcePortRange \u0026\u0026 !ipEntry.sourcePortName \u0026\u0026 !ipEntry.destinationPortNumber \u0026\u0026 !ipEntry.destinationPortRange \u0026\u0026 !ipEntry.destinationPortName \u0026\u0026 ipEntry.tcpFlags === '')",
                                "value": ""
                              }
                            ],
                            "ui-order-priority": 650,
                            "ui-single-line-group": "ProtocolNumberName"
                          }
                        },
                        "protocolNumber": {
                          "description": "Match a specific IP protocol number (specified in the type field of the IP header).",
                          "maximum": 255,
                          "minimum": 0,
                          "title": "Protocol Number",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 600,
                            "ui-single-line-group": "ProtocolNumberName"
                          }
                        },
                        "rateLimit": {
                          "description": "Rate limit to apply when the action is 'RateLimit'.",
                          "properties": {
                            "burstSize": {
                              "description": "The maximum burst size in bytes.",
                              "format": "int32",
                              "title": "Burst Size",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 200
                              }
                            },
                            "entrySpecificPolicer": {
                              "default": false,
                              "description": "Controls policer instantiation: false for shared instance, true for per-entry instances",
                              "title": "Entry Specific Policer",
                              "type": "boolean",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 300
                              }
                            },
                            "peakRate": {
                              "description": "The peak rate in kilobytes per second.",
                              "format": "int32",
                              "title": "Peak Rate",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 100
                              }
                            },
                            "scope": {
                              "default": "Global",
                              "description": "Determines how the policer is applied across subinterfaces. Global applies the policer across all subinterfaces, while Subinterface applies it individually to each subinterface.",
                              "enum": [
                                "Global",
                                "Subinterface"
                              ],
                              "title": "Scope",
                              "type": "string",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 400
                              }
                            }
                          },
                          "title": "Rate Limit",
                          "type": "object"
                        },
                        "sourcePortName": {
                          "description": "Source port to match by name.",
                          "enum": [
                            "ACAP",
                            "AFP-TCP",
                            "ARNS",
                            "ASF-RMCP",
                            "ASHARE",
                            "ATALK-RM",
                            "AURP",
                            "AUTH",
                            "BFD",
                            "BFD-ECHO",
                            "BFTP",
                            "BGMP",
                            "BGP",
                            "BOOTPC",
                            "BOOTPS",
                            "CCSO-NS",
                            "CHARGEN",
                            "CISCO-TDP",
                            "CITADEL",
                            "CLEARCASE",
                            "COMMERCE",
                            "COURIER",
                            "DAYTIME",
                            "DHCP-FAILOVER",
                            "DHCPV6-CLIENT",
                            "DHCPV6-SERVER",
                            "DICOM",
                            "DISCARD",
                            "DNSIX",
                            "DOMAIN",
                            "DSP",
                            "ECHO",
                            "EPP",
                            "ESRO",
                            "EXEC",
                            "FINGER",
                            "FTP",
                            "FTP-DATA",
                            "FTPS",
                            "FTPS-DATA",
                            "GODI",
                            "GOPHER",
                            "GTP-C",
                            "GTP-PRIME",
                            "GTP-U",
                            "HA-CLUSTER",
                            "HOSTNAME",
                            "HP-ALARM-MGR",
                            "HTTP",
                            "HTTP-ALT",
                            "HTTP-MGMT",
                            "HTTP-RPC",
                            "HTTPS",
                            "IEEE-MMS-SSL",
                            "IMAP",
                            "IMAP3",
                            "IMAPS",
                            "IPP",
                            "IPSEC",
                            "IPX",
                            "IRC",
                            "IRIS-BEEP",
                            "ISAKMP",
                            "ISAKMP-NAT",
                            "ISCSI",
                            "ISO-TSAP",
                            "KERBEROS",
                            "KERBEROS-ADM",
                            "KLOGIN",
                            "KPASSWD",
                            "KSHELL",
                            "L2TP",
                            "LDAP",
                            "LDAPS",
                            "LDP",
                            "LMP",
                            "LOGIN",
                            "LPD",
                            "LSP-PING",
                            "MAC-SERVER-ADM",
                            "MATIP-A",
                            "MATIP-B",
                            "MICRO-BFD",
                            "MICROSOFT-DS",
                            "MOBILE-IP",
                            "MONITOR",
                            "MPP",
                            "MS-EXCHANGE",
                            "MSDP",
                            "MSP",
                            "MSSQL-M",
                            "MSSQL-S",
                            "MULTIHOP-BFD",
                            "NAS",
                            "NCP",
                            "NETBIOS-DATA",
                            "NETBIOS-NS",
                            "NETBIOS-SS",
                            "NETNEWS",
                            "NETRJS-1",
                            "NETRJS-2",
                            "NETRJS-3",
                            "NETRJS-4",
                            "NETWALL",
                            "NEW-RWHO",
                            "NFS",
                            "NNTP",
                            "NNTPS",
                            "NTP",
                            "ODMR",
                            "OLSR",
                            "OPENVPN",
                            "PIM-AUTO-RP",
                            "PKIX-TIMESTAMP",
                            "POP2",
                            "POP3",
                            "POP3S",
                            "PPTP",
                            "PRINT-SRV",
                            "PTP-EVENT",
                            "PTP-GENERAL",
                            "QMTP",
                            "QOTD",
                            "RADIUS",
                            "RADIUS-ACCT",
                            "REMOTE-MAIL",
                            "REMOTEFS",
                            "REMOTECMD",
                            "RIP",
                            "RJE",
                            "RLP",
                            "RLZDB",
                            "RMC",
                            "RMONITOR",
                            "RPC2PORTMAP",
                            "RSYNC",
                            "RTELNET",
                            "RTSP",
                            "SGMP",
                            "SILC",
                            "SMUX",
                            "SNA-GW",
                            "SNMP",
                            "SNMP-TRAP",
                            "SNPP",
                            "SMTP",
                            "SQL-SVCS",
                            "SQL",
                            "SSH",
                            "SUBMISSION",
                            "SUNRPC",
                            "SVCLOC",
                            "SYSLOG",
                            "SYSTAT",
                            "TACACS",
                            "TALK",
                            "TCPMUX",
                            "TCPNETHASPSRV",
                            "TFTP",
                            "TIME",
                            "TIMED",
                            "UPS",
                            "XDMCP",
                            "XNS-CH",
                            "XNS-MAIL",
                            "XNS-TIME",
                            "Z3950"
                          ],
                          "title": "Source Port Name",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 400,
                            "ui-single-line-group": "PortName"
                          }
                        },
                        "sourcePortNumber": {
                          "description": "Source port to match by numerical value.",
                          "maximum": 65535,
                          "minimum": 0,
                          "title": "Source Port Number",
                          "type": "integer",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 200,
                            "ui-single-line-group": "PortNumbers"
                          }
                        },
                        "sourcePortOperator": {
                          "description": "Operator to use when matching sourcePort, either Equals, GreaterOrEquals, or LessOrEquals.",
                          "enum": [
                            "Equals",
                            "GreaterOrEquals",
                            "LessOrEquals"
                          ],
                          "title": "Source Port Operator",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "!ipEntry.sourcePortOperator \u0026\u0026 ((ipEntry.sourcePortNumber || ipEntry.sourcePortName !== '') || ipEntry.tcpFlags !== '')",
                                "value": "Equals"
                              },
                              {
                                "condition": "ipEntry.sourcePortOperator === 'Equals' \u0026\u0026 (!ipEntry.sourcePortNumber \u0026\u0026 !ipEntry.sourcePortName \u0026\u0026 !ipEntry.destinationPortNumber)",
                                "value": ""
                              }
                            ],
                            "ui-order-priority": 500,
                            "ui-single-line-group": "PortOperator"
                          }
                        },
                        "sourcePortRange": {
                          "description": "Range of source ports to match, in the format n-m, e.g. 100-200.  The start and end of the range must be port numbers.",
                          "title": "Source Port Range",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300,
                            "ui-single-line-group": "PortRange"
                          }
                        },
                        "sourcePrefix": {
                          "description": "Source prefix to match.",
                          "format": "ip",
                          "title": "Source Prefix",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 100,
                            "ui-single-line-group": "DestinationSourcePrefix"
                          }
                        },
                        "tcpFlags": {
                          "description": "Match TCP flags, usable with !, \u0026, | and the flags RST, SYN, and ACK.",
                          "title": "TCP Flags",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 900,
                            "ui-visible-if": "ipEntry.protocolName === \"TCP\" || ipEntry.protocolNumber === 6"
                          }
                        }
                      },
                      "title": "IP Entry",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-conditions": [
                          {
                            "condition": "!((ipEntry.action === undefined) \u0026\u0026 (ipEntry.sourcePortNumber !== null || ipEntry.destinationPortNumber !== null || ipEntry.sourcePrefix !== undefined || ipEntry.destinationPrefix !== undefined || ipEntry.soucePortRange !== undefined || ipEntry.destinationPortRange !== undefined || ipEntry.sourcePortName !== undefined || ipEntry.destinationPortName !== undefined || ipEntry.sourcePortOperator !== undefined || ipEntry.destinationPortOperator !== undefined || ipEntry.protocolNumber !== null || ipEntry.protocolName !== undefined || ipEntry.icmpTypeName !== undefined || ipEntry.icmpTypeNumber !== null || ipEntry.tcpFlags !== undefined || ipEntry.firstFragment !== false || ipEntry.fragment !== false))",
                            "errorMsg": "An IP action must be set if any of the IP fields are set."
                          },
                          {
                            "condition": "!(ipEntry.firstFragment === true \u0026\u0026 ipEntry.fragment === false)",
                            "errorMsg": "Fragment match must be enabled when First Fragment match is enabled."
                          },
                          {
                            "condition": "!((ipEntry.sourcePortNumber ? 1 : 0) + (ipEntry.sourcePortRange ? 1 : 0) + (ipEntry.sourcePortName ? 1 : 0) \u003e 1)",
                            "errorMsg": "Only one of Source Port Number, Source Port Range or Source Port Name can be set at a time."
                          },
                          {
                            "condition": "!((ipEntry.destinationPortNumber ? 1 : 0) + (ipEntry.destinationPortRange ? 1 : 0) + (ipEntry.destinationPortName ? 1 : 0) \u003e 1)",
                            "errorMsg": "Only one of Destination Port Number, Destination Port Range or Destination Port Name can be set at a time."
                          },
                          {
                            "condition": "!(ipEntry.protocolNumber !== null \u0026\u0026 ipEntry.protocolName !== undefined)",
                            "errorMsg": "Only one of the Protocol Number or Protocol Name can be set at a time."
                          },
                          {
                            "condition": "!((ipEntry.sourcePortNumber !== null || ipEntry.destinationPortNumber !== null || ipEntry.sourcePortRange !== undefined || ipEntry.destinationPortRange !== undefined || ipEntry.sourcePortName !== undefined || ipEntry.destinationPortName !== undefined) \u0026\u0026 (ipEntry.protocolNumber === null \u0026\u0026 ipEntry.protocolName === undefined))",
                            "errorMsg": "Protocol Name or Protocol Number must be set if any of the Source/Destination Port or Port Range fields are set."
                          },
                          {
                            "condition": "!((ipEntry.sourcePortNumber !== null || ipEntry.destinationPortNumber !== null || ipEntry.sourcePortRange !== undefined || ipEntry.destinationPortRange !== undefined || ipEntry.sourcePortName !== undefined || ipEntry.destinationPortName !== undefined) \u0026\u0026 !((ipEntry.protocolNumber === 6 || ipEntry.protocolNumber === 17) || (ipEntry.protocolName === 'TCP' || ipEntry.protocolName === 'UDP')))",
                            "errorMsg": "Protocol must be TCP or UDP if any of the Source/Destination Port or Port Range fields are set."
                          },
                          {
                            "condition": "(ipEntry.icmpTypeName === undefined \u0026\u0026 ipEntry.icmpTypeNumber === null) || (ipEntry.icmpTypeName !== undefined \u0026\u0026 ipEntry.icmpTypeNumber === null) || (ipEntry.icmpTypeName === undefined \u0026\u0026 ipEntry.icmpTypeNumber !== null)",
                            "errorMsg": "Either ICMP Type Name or ICMP Type Number must be set, but not both."
                          },
                          {
                            "condition": "!((ipEntry.protocolName === 'ICMP' || ipEntry.protocolNumber === 1) \u0026\u0026 ipEntry.icmpTypeName !== undefined \u0026\u0026 ['McastRtrAdv', 'McastRtrSolicit', 'McastRtrTerm', 'MldDone', 'MldQuery', 'MldReport', 'MldV2', 'NeighborAdvertise', 'NeighborSolicit', 'NodeInfoQuery', 'NodeInfoResponse', 'PacketTooBig', 'ParamProblem', 'RouterAdvertise', 'RouterRenumber', 'RouterSolicit'].includes(ipEntry.icmpTypeName))",
                            "errorMsg": "IPv6 ICMP types cannot be used with IPv4 ICMP protocol"
                          },
                          {
                            "condition": "!((ipEntry.protocolName === 'ICMP6' || ipEntry.protocolNumber === 58) \u0026\u0026 ipEntry.icmpTypeName !== undefined \u0026\u0026 !['DestUnreachable', 'EchoReply', 'EchoRequest', 'McastRtrAdv', 'McastRtrSolicit', 'McastRtrTerm', 'MldDone', 'MldQuery', 'MldReport', 'MldV2', 'NeighborAdvertise', 'NeighborSolicit', 'NodeInfoQuery', 'NodeInfoResponse', 'PacketTooBig', 'ParamProblem', 'Redirect', 'RouterAdvertise', 'RouterRenumber', 'RouterSolicit', 'TimeExceeded'].includes(ipEntry.icmpTypeName))",
                            "errorMsg": "Invalid ICMPv6 type name provided."
                          },
                          {
                            "condition": "!((ipEntry.protocolName === 'ICMP' || ipEntry.protocolNumber === 1) \u0026\u0026 ipEntry.icmpTypeName !== undefined \u0026\u0026 !['DestUnreachable', 'Echo', 'EchoReply', 'ParamProblem', 'Redirect', 'RouterAdvertise', 'RouterSolicit', 'SourceQuench', 'TimeExceeded', 'Timestamp', 'TimestampReply'].includes(ipEntry.icmpTypeName))",
                            "errorMsg": "Invalid ICMPv4 type name provided."
                          }
                        ],
                        "ui-visible-if": "type != \"MAC\" || type == \"Auto\""
                      }
                    },
                    "macEntry": {
                      "properties": {
                        "action": {
                          "description": "An action to take, either 'Accept','Drop', or 'RateLimit'.",
                          "enum": [
                            "Drop",
                            "Accept",
                            "RateLimit"
                          ],
                          "title": "Action",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-single-line-group": "Action"
                          }
                        },
                        "destinationMAC": {
                          "description": "Match an Ethernet frame if its destination MAC address logically anded with the mask equals this MAC address.",
                          "format": "macAddr",
                          "title": "Destination MAC",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 150,
                            "ui-single-line-group": "DestinationSourceMAC"
                          }
                        },
                        "destinationMACMask": {
                          "description": "Match an Ethernet frame if its destination MAC address logically anded with the mask equals the configured MAC address.",
                          "title": "Destination MAC Mask",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 250,
                            "ui-single-line-group": "DestinationSourceMACMask"
                          }
                        },
                        "ethertype": {
                          "description": "An Ethernet frame matches this condition if its ethertype value (after 802.1Q VLAN tags) matches the specified value.",
                          "enum": [
                            "ARP",
                            "AUTHENTICATION8021X",
                            "ETHOAM",
                            "FCOE",
                            "FCOEINITIALIZATION",
                            "FLOWCONTROL",
                            "IPV4",
                            "IPV6",
                            "LACP",
                            "LLDP",
                            "MACSEC",
                            "MPLSMULTICAST",
                            "MPLSUNICAST",
                            "PBB",
                            "PPPOEDISCOVERY",
                            "PPPOESESSION",
                            "PTP",
                            "ROCE"
                          ],
                          "title": "Ethertype",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 500
                          }
                        },
                        "log": {
                          "description": "Log the matches for this entry.",
                          "title": "Log",
                          "type": "boolean",
                          "x-eda-nokia-com": {
                            "ui-column-span": 1,
                            "ui-single-line-group": "Action"
                          }
                        },
                        "outerVLANIDOperator": {
                          "description": "Operator to use when matching OuterVlanIdValue, either Equals, GreaterOrEquals, or LessOrEquals.",
                          "enum": [
                            "Equals",
                            "GreaterOrEquals",
                            "LessOrEquals"
                          ],
                          "title": "Outer VLAN ID Operator",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-defaults": [
                              {
                                "condition": "!macEntry.outerVLANIDOperator \u0026\u0026 ((macEntry.outerVLANIDValue !== '' || macEntry.outerVLANIDRange !== ''))",
                                "value": "Equals"
                              },
                              {
                                "condition": "macEntry.outerVLANIDOperator === 'Equals' \u0026\u0026 (!macEntry.outerVLANIDValue \u0026\u0026 !macEntry.outerVLANIDRange)",
                                "value": ""
                              }
                            ],
                            "ui-order-priority": 400
                          }
                        },
                        "outerVLANIDRange": {
                          "description": "Range of Outer vlan IDs to match, in the format n-m, e.g. 100-200",
                          "title": "Outer VLAN ID Range",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 350,
                            "ui-single-line-group": "OuterVLANID"
                          }
                        },
                        "outerVLANIDValue": {
                          "description": "Ethernet frame matching criteria based on the outermost VLAN ID found before the subinterface-defining VLAN tag (if any) is removed. A value of 'none' will match only untagged frames.",
                          "title": "Outer VLAN ID Value",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 300,
                            "ui-single-line-group": "OuterVLANID"
                          }
                        },
                        "rateLimit": {
                          "description": "Rate limit to apply when the action is 'RateLimit'.",
                          "properties": {
                            "burstSize": {
                              "description": "The maximum burst size in bytes.",
                              "format": "int32",
                              "title": "Burst Size",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 200
                              }
                            },
                            "entrySpecificPolicer": {
                              "default": false,
                              "description": "Controls policer instantiation: false for shared instance, true for per-entry instances",
                              "title": "Entry Specific Policer",
                              "type": "boolean",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 300
                              }
                            },
                            "peakRate": {
                              "description": "The peak rate in kilobytes per second.",
                              "format": "int32",
                              "title": "Peak Rate",
                              "type": "integer",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 100
                              }
                            },
                            "scope": {
                              "default": "Global",
                              "description": "Determines how the policer is applied across subinterfaces. Global applies the policer across all subinterfaces, while Subinterface applies it individually to each subinterface.",
                              "enum": [
                                "Global",
                                "Subinterface"
                              ],
                              "title": "Scope",
                              "type": "string",
                              "x-eda-nokia-com": {
                                "ui-column-span": 2,
                                "ui-order-priority": 400
                              }
                            }
                          },
                          "title": "Rate Limit",
                          "type": "object"
                        },
                        "sourceMAC": {
                          "description": "Match an Ethernet frame if its source MAC address logically anded with the mask equals this MAC address.",
                          "format": "macAddr",
                          "title": "Source MAC",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 100,
                            "ui-single-line-group": "DestinationSourceMAC"
                          }
                        },
                        "sourceMACMask": {
                          "description": "Match an Ethernet frame if its source MAC address logically anded with the mask equals the configured MAC address.",
                          "title": "Source MAC Mask",
                          "type": "string",
                          "x-eda-nokia-com": {
                            "ui-column-span": 2,
                            "ui-order-priority": 200,
                            "ui-single-line-group": "DestinationSourceMACMask"
                          }
                        }
                      },
                      "title": "MAC Entry",
                      "type": "object",
                      "x-eda-nokia-com": {
                        "ui-conditions": [
                          {
                            "condition": "!((macEntry.action === undefined) \u0026\u0026 (macEntry.sourceMAC !== undefined || macEntry.destinationMAC !== undefined || macEntry.sourceMACMask !== undefined || macEntry.destinationMACMask !== undefined || macEntry.outerVLANIDValue !== undefined || macEntry.outerVLANIDRange !== undefined || macEntry.outerVLANIDOperator !== undefined || macEntry.ethertype !== undefined))",
                            "errorMsg": "A MAC action must be set if any of the MAC fields are set."
                          },
                          {
                            "condition": "!(macEntry.sourceMAC !== undefined \u0026\u0026 macEntry.sourceMACMask === undefined)",
                            "errorMsg": "A mask must be set when a Source MAC is configured"
                          },
                          {
                            "condition": "!(macEntry.destinationMAC !== undefined \u0026\u0026 macEntry.destinationMACMask === undefined)",
                            "errorMsg": "A mask must be set when a Destination MAC is configured"
                          },
                          {
                            "condition": "!(macEntry.outerVLANIDValue !== undefined \u0026\u0026 macEntry.outerVLANIDRange !== undefined)",
                            "errorMsg": "Outer VLAN ID Value and Outer VLAN ID Range cannot be set at the same time"
                          }
                        ],
                        "ui-visible-if": "type == \"MAC\" || type == \"Auto\""
                      }
                    },
                    "type": {
                      "default": "Auto",
                      "description": "Type of the entry which can be IPV4, IPV6, MAC or Auto.",
                      "enum": [
                        "IPV4",
                        "IPV6",
                        "MAC",
                        "Auto"
                      ],
                      "title": "Type",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2
                      }
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object"
                },
                "title": "Entries",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-may-reorder": true,
                  "ui-order-priority": 900
                }
              },
              "statisticsPerEntry": {
                "description": "Enable or disable per-entry counters.",
                "title": "Per-entry counters",
                "type": "boolean",
                "x-eda-nokia-com": {
                  "ui-column-span": 1,
                  "ui-order-priority": 1050
                }
              }
            },
            "required": [
              "entries"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "FilterStatus defines the observed state of Filter",
            "readOnly": true,
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.filters.v1alpha1.FilterList": {
        "description": "FilterList is a list of filters",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.filters.v1alpha1.Filter_DeletedResourceEntry": {
        "properties": {
          "commitTime": {
            "format": "date-time",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 50,
              "ui-title": "Commit Time",
              "ui-title-key": "commitTime"
            }
          },
          "hash": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Commit Hash",
              "ui-title-key": "commitHash"
            }
          },
          "name": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 10,
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          },
          "transactionId": {
            "format": "uint64",
            "type": "integer",
            "x-eda-nokia-com": {
              "ui-order-priority": 30,
              "ui-title": "Transaction ID",
              "ui-title-key": "transactionId"
            }
          }
        },
        "type": "object"
      },
      "com.nokia.eda.filters.v1alpha1.Filter_DeletedResources": {
        "items": {
          "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter_DeletedResourceEntry"
        },
        "type": "array"
      },
      "com.nokia.eda.filters.v1alpha1.Filter_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "filters.eda.nokia.com",
                  "kind": "Filter",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Filters Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/apps/filters.eda.nokia.com": {
      "get": {
        "description": "list versions available from filters.eda.nokia.com",
        "operationId": "getVersionFiltersEdaNokiaCom",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1": {
      "get": {
        "description": "list resources available from filters.eda.nokia.com/v1alpha1",
        "operationId": "getResourcesFiltersEdaNokiaComV1alpha1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/_ui/{pathname}": {
      "get": {
        "description": "get UI specification for filters.eda.nokia.com v1alpha1",
        "operationId": "uiFiltersEdaNokiaComV1alpha1",
        "parameters": [
          {
            "description": "pathname to the UI specification to retrieve",
            "in": "path",
            "name": "pathname",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/controlplanefilters": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listFiltersEdaNokiaComV1alpha1Controlplanefilters",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilterList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list controlplanefilters",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/filters": {
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listFiltersEdaNokiaComV1alpha1Filters",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.FilterList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list filters",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/controlplanefilters": {
      "delete": {
        "operationId": "deleteAllFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilterList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of ControlPlaneFilter in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilterList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list controlplanefilters in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a ControlPlaneFilter",
        "operationId": "createFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/controlplanefilters/_deleted": {
      "get": {
        "operationId": "getDeletedFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of ControlPlaneFilter that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/controlplanefilters/{name}": {
      "delete": {
        "description": "delete the specified ControlPlaneFilter",
        "operationId": "deleteFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the ControlPlaneFilter to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified ControlPlaneFilter.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "description": "name of the ControlPlaneFilter",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a ControlPlaneFilter",
        "operationId": "patchFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a ControlPlaneFilter",
        "operationId": "replaceFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.ControlPlaneFilter"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/controlplanefilters/{name}/_revs": {
      "get": {
        "operationId": "getHistoryFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "description": "name of the ControlPlaneFilter to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced ControlPlaneFilter.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/controlplanefilters/{name}/_topology": {
      "get": {
        "operationId": "getTopologyFiltersEdaNokiaComV1alpha1NamespaceControlplanefilters",
        "parameters": [
          {
            "description": "name of the ControlPlaneFilter to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced ControlPlaneFilter.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/filters": {
      "delete": {
        "operationId": "deleteAllFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the set of CRs deleted based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.FilterList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete all instances of Filter in the specified namespace.",
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "The resulting resources can optionally be a subset of the resource content by using the \"fields\" query parameter.",
        "operationId": "listFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.FilterList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "list filters in namespace",
        "tags": [
          "apps"
        ]
      },
      "post": {
        "description": "create a Filter",
        "operationId": "createFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/filters/_deleted": {
      "get": {
        "operationId": "getDeletedFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter_DeletedResources"
                }
              }
            },
            "description": "Returns list of deleted resource entries"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get information about the instances of Filter that have been deleted that existed in the specified namespace.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/filters/{name}": {
      "delete": {
        "description": "delete the specified Filter",
        "operationId": "deleteFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "description": "the namespace scope from which to perform the delete",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the Filter to delete",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "get": {
        "description": "read the specified Filter.  If a git hash query parameter\nis supplied, the resource as it existed at the time of the git hash\nwill be returned. Streaming is not supported when a particular revision\nis asked for.",
        "operationId": "readFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "description": "name of the Filter",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "resource content will be returned as it was at the time of this git hash",
            "in": "query",
            "name": "hash",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "patch": {
        "description": "patch a Filter",
        "operationId": "patchFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      },
      "put": {
        "description": "replace a Filter",
        "operationId": "replaceFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.filters.v1alpha1.Filter"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/filters/{name}/_revs": {
      "get": {
        "operationId": "getHistoryFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "description": "name of the Filter to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "maximum number of history entries to return",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "uint64",
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceHistory"
                }
              }
            },
            "description": "Returns the change history of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get revision history for the specified namespaced Filter.",
        "tags": [
          "apps"
        ]
      }
    },
    "/apps/filters.eda.nokia.com/v1alpha1/namespaces/{namespace}/filters/{name}/_topology": {
      "get": {
        "operationId": "getTopologyFiltersEdaNokiaComV1alpha1NamespaceFilters",
        "parameters": [
          {
            "description": "name of the Filter to retrieve",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope from which to retrieve the result",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the type of topology to retrieve",
            "in": "query",
            "name": "type",
            "schema": {
              "default": "childrenAndParents",
              "enum": [
                "children",
                "parents",
                "childrenAndParents",
                "dependentCrs"
              ],
              "type": "string"
            }
          },
          {
            "description": "whether to recursively build the topology to include all layers or just a single layer of the topology",
            "in": "query",
            "name": "recurse",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTopology"
                }
              }
            },
            "description": "Returns the topology of the specified resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get the topology for the specified namespaced Filter.",
        "tags": [
          "apps"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}